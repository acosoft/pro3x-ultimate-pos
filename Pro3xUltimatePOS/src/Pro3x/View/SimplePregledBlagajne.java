/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SimplePregledBlagajne.java
 *
 * Created on 07.04.2013., 22:20:41
 */
package Pro3x.View;

import Acosoft.Processing.Components.Code;
import Acosoft.Processing.Components.DateCellEditor;
import Acosoft.Processing.Components.DateCellRenderer;
import Acosoft.Processing.Components.NumberCellEditor;
import Acosoft.Processing.Components.NumberCellRenderer;
import Acosoft.Processing.Components.Tasks;
import java.beans.PropertyVetoException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.jdesktop.application.Action;

/**
 *
 * @author aco
 */
public class SimplePregledBlagajne extends javax.swing.JInternalFrame {

    private SimpleDateFormat sdf;
    private Date datum;
    
    /** Creates new form SimplePregledBlagajne */
    public SimplePregledBlagajne(Date datum) {

        this.datum = datum;
        this.sdf = new SimpleDateFormat("dd.MM.yyyy");
        
        initComponents();
        
        SimpleModelPregledaBlagajne model = new SimpleModelPregledaBlagajne();
        model.setDatum(datum);
        model.refresh();
        
        grid.setDefaultEditor(Date.class, new DateCellEditor("dd.MM.yyyy HH:mm"));
        grid.setDefaultEditor(Double.class, new NumberCellEditor(true));
        
        grid.setDefaultRenderer(Date.class, new DateCellRenderer("dd.MM.yyyy HH:mm"));
        grid.setDefaultRenderer(Double.class, new NumberCellRenderer());
        
        grid.setModel(model);
        
        Code.ScrollToLastRow(grid);
        Code.SelectLastRow(grid);

        txtDatum.setText(sdf.format(datum));
    }

    public Date getDatum() {
        try {
            return sdf.parse(txtDatum.getText());
        } catch (ParseException ex) {
            Logger.getLogger(SimplePregledBlagajne.class.getName()).log(Level.SEVERE, null, ex);
            txtDatum.setText(sdf.format(datum));
            return datum;
        }
    }
    
    private SimpleModelPregledaBlagajne getModel()
    {
        return (SimpleModelPregledaBlagajne) grid.getModel();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtDatum = new javax.swing.JTextField();
        cmdOsvjezi = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        cmdDodaj = new javax.swing.JButton();
        cmdIzmjeni = new javax.swing.JButton();
        cmdIzbrisi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        Spremi = new javax.swing.JButton();
        cmdZatvori1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(SimplePregledBlagajne.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 10, 10, 10));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1, java.awt.BorderLayout.LINE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        grid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        grid.setName("grid"); // NOI18N
        grid.setRowHeight(35);
        jScrollPane1.setViewportView(grid);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        txtDatum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDatum.setText(resourceMap.getString("txtDatum.text")); // NOI18N
        txtDatum.setName("txtDatum"); // NOI18N
        txtDatum.setPreferredSize(new java.awt.Dimension(200, 30));
        txtDatum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusDatum(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                blurDatum(evt);
            }
        });
        jPanel3.add(txtDatum);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getActionMap(SimplePregledBlagajne.class, this);
        cmdOsvjezi.setAction(actionMap.get("Osvjezi")); // NOI18N
        cmdOsvjezi.setText(resourceMap.getString("cmdOsvjezi.text")); // NOI18N
        cmdOsvjezi.setName("cmdOsvjezi"); // NOI18N
        cmdOsvjezi.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(cmdOsvjezi);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setName("jSeparator2"); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(6, 30));
        jPanel3.add(jSeparator2);

        cmdDodaj.setAction(actionMap.get("Dodaj")); // NOI18N
        cmdDodaj.setText(resourceMap.getString("cmdDodaj.text")); // NOI18N
        cmdDodaj.setName("cmdDodaj"); // NOI18N
        cmdDodaj.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(cmdDodaj);

        cmdIzmjeni.setAction(actionMap.get("Izmjeni")); // NOI18N
        cmdIzmjeni.setText(resourceMap.getString("cmdIzmjeni.text")); // NOI18N
        cmdIzmjeni.setName("cmdIzmjeni"); // NOI18N
        cmdIzmjeni.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(cmdIzmjeni);

        cmdIzbrisi.setAction(actionMap.get("Izbrisi")); // NOI18N
        cmdIzbrisi.setText(resourceMap.getString("cmdIzbrisi.text")); // NOI18N
        cmdIzbrisi.setName("cmdIzbrisi"); // NOI18N
        cmdIzbrisi.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(cmdIzbrisi);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setName("jSeparator1"); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 30));
        jPanel3.add(jSeparator1);

        Spremi.setAction(actionMap.get("Spremi")); // NOI18N
        Spremi.setText(resourceMap.getString("Spremi.text")); // NOI18N
        Spremi.setName("Spremi"); // NOI18N
        Spremi.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(Spremi);

        cmdZatvori1.setAction(actionMap.get("Zatvori")); // NOI18N
        cmdZatvori1.setText(resourceMap.getString("cmdZatvori1.text")); // NOI18N
        cmdZatvori1.setName("cmdZatvori1"); // NOI18N
        cmdZatvori1.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel3.add(cmdZatvori1);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void focusDatum(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusDatum
        getRootPane().setDefaultButton(cmdOsvjezi);
    }//GEN-LAST:event_focusDatum

    private void blurDatum(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_blurDatum
        getRootPane().setDefaultButton(Spremi);
    }//GEN-LAST:event_blurDatum

    private void SpremiPromjene()
    {
        if(getModel().isChanged())
        {
            if(JOptionPane.showConfirmDialog(this, "Želite li spremiti promjene?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION)
            {
                getModel().save();
                Tasks.showMessage("Blagajnički zapisi su uspješno spremljeni");
            }
        }
    }
    
    @Action
    public void Zatvori() {
        try {
            SpremiPromjene();
            setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(SimplePregledBlagajne.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Action
    public void Spremi() {
        getModel().save();
        Tasks.showMessage("Blagajnički zapisi su uspješno spremljeni");
    }    

    @Action
    public void Osvjezi() {
        SpremiPromjene();
        getModel().setDatum(getDatum());
        getModel().refresh();
        
        Code.ScrollToLastRow(grid);
        Code.SelectLastRow(grid);
    }

    @Action
    public void Izbrisi() {
        if(grid.getSelectedRowCount() > 0)
        {
            int index = grid.convertRowIndexToModel(grid.getSelectedRow());
            if(getModel().isRacun(index))
            {
                Tasks.showMessage("Blagajnički zapisi gotovinskih računa se ne mogu ručno mijenjati");
            }
            else
            {
                getModel().izbrisi(index);
                Tasks.showMessage("Blagajnički zapis je dodan na listu zapisa za brisanje");
            }
        }
        else
        {
            Tasks.showMessage("Izaberite blagajnički zapis koji želite izbrisati");
        }
    }

    @Action
    public void Izmjeni() {
        if(grid.getSelectedRowCount() > 0)
        {
            if(getModel().isRacun(grid.getSelectedRow()))
            {
                Tasks.showMessage("Blagajnički zapisi gotovinskih računa se ne mogu ručno mijenjati");
            }
            else
            {
                grid.requestFocus();
                grid.editCellAt(grid.getSelectedRow(), 0);
            }
        }
        else
            Tasks.showMessage("Izaberite blagajnički zapis koji želite izmjeniti");
    }

    @Action
    public void Dodaj() {
        getModel().dodaj();
        
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                grid.requestFocus();
        
                int index = grid.getRowCount() - 1;
                grid.setRowSelectionInterval(index, index);
                grid.editCellAt(index, 1);

                Code.ScrollToLastRow(grid);
            }
        });
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Spremi;
    private javax.swing.JButton cmdDodaj;
    private javax.swing.JButton cmdIzbrisi;
    private javax.swing.JButton cmdIzmjeni;
    private javax.swing.JButton cmdOsvjezi;
    private javax.swing.JButton cmdZatvori1;
    private javax.swing.JTable grid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables
}
