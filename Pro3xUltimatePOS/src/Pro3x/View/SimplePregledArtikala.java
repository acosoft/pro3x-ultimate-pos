/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SimplePregledArtikala.java
 *
 * Created on 09.02.2013., 10:14:27
 */
package Pro3x.View;

import Acosoft.Processing.Components.ExceptionView;
import Acosoft.Processing.Components.NumberCellRenderer;
import Acosoft.Processing.Components.Tasks;
import Acosoft.Processing.DataBox.Roba;
import Acosoft.Processing.Pro3App;
import Acosoft.Processing.Pro3View;
import Acosoft.Processing.ProzorRoba;
import Pro3x.Code.ReportingServices;
import Pro3x.Configuration.General;
import Pro3x.Kalkulacije.PregledSvihKalkulacija;
import Pro3x.Live.ArtikalEvents;
import Pro3x.Live.EventArgs;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperPrint;
import org.jdesktop.application.Action;

/**
 *
 * @author aco
 */
public class SimplePregledArtikala extends javax.swing.JInternalFrame {
    public static final String PLACEHOLDER = "Pretraživanje";

    private SimpleModelArtikala model;
    
    /** Creates new form SimplePregledArtikala */
    public SimplePregledArtikala(SimpleModelArtikala model) {
        this.model = model;
        initComponents();

        cmdNormativi.setVisible(General.isKoristiNormativeArtikala());
        
        grid.setDefaultRenderer(Double.class, new NumberCellRenderer(false, true));
        PratiPromjene();
    }
    
    private void PratiPromjene()
    {
        ArtikalEvents.Events().addListener(new Pro3x.Live.EventListener() {

            @Override
            public void doWork(Object source, EventArgs eventArgs) {
                getModel().refresh();
            }
        });
    }

    @Action
    public void ispisBarkoda()
    {
        if(grid.getSelectedRowCount() == 1)
        {
            int mIndex = grid.convertRowIndexToModel(grid.getSelectedRow());
            Roba roba = getModel().getItem(mIndex);
            
            List<Roba> data = new ArrayList<Roba>();
            data.add(roba);
            
            try
            {
                JasperPrint jp = ReportingServices.LoadReport(PregledSvihKalkulacija.class, 
                        "resources/IspisArtikalBarkod.jasper", null, data);
                ReportingServices.ShowReport(jp, "Ispis barkoda za artikal " + roba.getNaziv(), 
                        "barkod-artikal");
            }
            catch (JRException ex)
            {
                Logger.getLogger(SimplePregledArtikala.class.getName()).log(Level.SEVERE, null, ex);
                new ExceptionView(ex).setVisible(true);
            }

        }
        else Tasks.showMessage("Izaberite redak za koji želite ispisati barkod.");
    }
    
    @Action
    public void izmjenaNormativa()
    {
        if(grid.getSelectedRowCount() == 1)
        {
            Roba roba = getModel().getItem(grid.convertRowIndexToModel(grid.getSelectedRow()));
            ((Pro3View)Pro3App.getApplication().getMainView()).Show(new IzmjenaNormativa(roba));
        }
        else Tasks.showMessage("Izaberite redak za koji želite promijeniti normative");
    }
    
    //TODO: prebaciti pripremu kartice u pozadinu, tako da ne stane cijela aplikacijak dok se sve učita
    @Action
    public void pregledKartice()
    {
        if(grid.getSelectedRowCount() == 1)
        {
            Roba roba = getModel().getItem(grid.convertRowIndexToModel(grid.getSelectedRow()));
            PregledKartice x = new PregledKartice(roba);
            this.getDesktopPane().add(x);
            x.setVisible(true);
        }
        else
            Tasks.showMessage("Izaberite redak za koji želite prikazati karticu.");
    }

    
    public SimpleModelArtikala getModel() {
        return model;
    }

    public void setModel(SimpleModelArtikala model) {
        this.model = model;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        cmdNormativi = new javax.swing.JButton();
        cmdIzmjeni = new javax.swing.JButton();
        cmdIzbrisi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cmdZatvori = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        cmdOsvjezi = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        cmdKartica = new javax.swing.JButton();
        cmdBarkod = new javax.swing.JButton();
        cmdDodaj = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(SimplePregledArtikala.class);
        setTitle(resourceMap.getString("simple-popis-artikala-v1.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(960, 600));
        setName("simple-popis-artikala-v1"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 10, 10, 5));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24));
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jLabel1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setName("jSeparator2"); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(6, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jSeparator2, gridBagConstraints);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getActionMap(SimplePregledArtikala.class, this);
        cmdNormativi.setAction(actionMap.get("izmjenaNormativa")); // NOI18N
        cmdNormativi.setText(resourceMap.getString("cmdNormativi.text")); // NOI18N
        cmdNormativi.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdNormativi.setName("cmdNormativi"); // NOI18N
        cmdNormativi.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdNormativi, gridBagConstraints);

        cmdIzmjeni.setAction(actionMap.get("izmjeni")); // NOI18N
        cmdIzmjeni.setText(resourceMap.getString("cmdIzmjeni.text")); // NOI18N
        cmdIzmjeni.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdIzmjeni.setName("cmdIzmjeni"); // NOI18N
        cmdIzmjeni.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdIzmjeni, gridBagConstraints);

        cmdIzbrisi.setAction(actionMap.get("izbrisi")); // NOI18N
        cmdIzbrisi.setText(resourceMap.getString("cmdIzbrisi.text")); // NOI18N
        cmdIzbrisi.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdIzbrisi.setName("cmdIzbrisi"); // NOI18N
        cmdIzbrisi.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdIzbrisi, gridBagConstraints);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setName("jSeparator1"); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jSeparator1, gridBagConstraints);

        cmdZatvori.setAction(actionMap.get("close")); // NOI18N
        cmdZatvori.setText(resourceMap.getString("cmdZatvori.text")); // NOI18N
        cmdZatvori.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdZatvori.setName("cmdZatvori"); // NOI18N
        cmdZatvori.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdZatvori, gridBagConstraints);

        search.setText(resourceMap.getString("search.text")); // NOI18N
        search.setName("search"); // NOI18N
        search.setPreferredSize(new java.awt.Dimension(200, 30));
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocus(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchBlur(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(search, gridBagConstraints);

        cmdOsvjezi.setAction(actionMap.get("refresh")); // NOI18N
        cmdOsvjezi.setText(resourceMap.getString("cmdOsvjezi.text")); // NOI18N
        cmdOsvjezi.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdOsvjezi.setName("cmdOsvjezi"); // NOI18N
        cmdOsvjezi.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdOsvjezi, gridBagConstraints);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setName("jSeparator3"); // NOI18N
        jSeparator3.setPreferredSize(new java.awt.Dimension(6, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jSeparator3, gridBagConstraints);

        cmdKartica.setAction(actionMap.get("pregledKartice")); // NOI18N
        cmdKartica.setText(resourceMap.getString("cmdKartica.text")); // NOI18N
        cmdKartica.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdKartica.setName("cmdKartica"); // NOI18N
        cmdKartica.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdKartica, gridBagConstraints);

        cmdBarkod.setAction(actionMap.get("ispisBarkoda")); // NOI18N
        cmdBarkod.setText(resourceMap.getString("cmdBarkod.text")); // NOI18N
        cmdBarkod.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdBarkod.setName("cmdBarkod"); // NOI18N
        cmdBarkod.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdBarkod, gridBagConstraints);

        cmdDodaj.setAction(actionMap.get("dodaj")); // NOI18N
        cmdDodaj.setText(resourceMap.getString("cmdDodaj.text")); // NOI18N
        cmdDodaj.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdDodaj.setName("cmdDodaj"); // NOI18N
        cmdDodaj.setPreferredSize(new java.awt.Dimension(90, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(cmdDodaj, gridBagConstraints);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        grid.setAutoCreateRowSorter(true);
        grid.setModel(getModel());
        grid.setName("grid"); // NOI18N
        grid.setRowHeight(35);
        grid.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(grid);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocus
        
        if(search.getText().equals(PLACEHOLDER))
        {
            search.setText("");
        }
        
        search.selectAll();
        getRootPane().setDefaultButton(cmdOsvjezi);
        
    }//GEN-LAST:event_searchFocus

    private void searchBlur(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchBlur

        if(search.getText().isEmpty())
        {
            search.setText(PLACEHOLDER);
        }
        
        search.select(0, 0);
        getRootPane().setDefaultButton(null);
        
    }//GEN-LAST:event_searchBlur

    @Action
    public void refresh() {
        
        if(search.getText().equals(PLACEHOLDER))
        {
            getModel().setFilter("");
        }
        else
        {
            getModel().setFilter(search.getText());
            
            search.selectAll();
            search.requestFocus();
        }
    }

    @Action
    public void close() {
        try {
            setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(SimplePregledArtikala.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Action
    public void izbrisi() {
        if(grid.getSelectedRowCount() == 1)
        {
            if(JOptionPane.showConfirmDialog(this, "Želite li izbrisati odabrani red?", 
                "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                int index = grid.convertRowIndexToModel(grid.getSelectedRow());

                try {
                    getModel().delete(index);
                } catch (Exception ex) {
                    Logger.getLogger(SimplePregledArtikala.class.getName()).log(Level.SEVERE, null, ex);
                    Tasks.showMessage(ex.getMessage());
                }

                Tasks.showMessage("Redak je uspješno izbrisan");
            }
        }
        else
        {
            Tasks.showMessage("Izaberite redak koji želite izbrisati");
        }
    }
    
    

    @Action
    public void dodaj() {
        Pro3View main = (Pro3View) Pro3App.getApplication().getMainView();
        main.AkcijaNoviArtikal();
    }

    @Action
    public void izmjeni() {
        if(grid.getSelectedRowCount() == 1)
        {
            Pro3View main = (Pro3View) Pro3App.getApplication().getMainView();
            
            int index = grid.convertRowIndexToModel(grid.getSelectedRow());
            Roba proizvod = getModel().getItem(index);
            ProzorRoba x = new ProzorRoba(getModel().getManager(), proizvod);
            x.setTitle("Izmjena artikla: " + proizvod.getNaziv());
            main.Show(x);
        }
        else
        {
            Tasks.showMessage("Izaberite redak koji želite promijeniti");
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBarkod;
    private javax.swing.JButton cmdDodaj;
    private javax.swing.JButton cmdIzbrisi;
    private javax.swing.JButton cmdIzmjeni;
    private javax.swing.JButton cmdKartica;
    private javax.swing.JButton cmdNormativi;
    private javax.swing.JButton cmdOsvjezi;
    private javax.swing.JButton cmdZatvori;
    private javax.swing.JTable grid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
