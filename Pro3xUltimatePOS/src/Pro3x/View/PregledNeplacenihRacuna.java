/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PregledNeplacenihRacuna.java
 *
 * Created on 2010.04.27, 22:28:14
 */

package Pro3x.View;

import Acosoft.Processing.Components.DateCellRenderer;
import Acosoft.Processing.Components.ExceptionView;
import Acosoft.Processing.Components.NumberCellRenderer;
import Acosoft.Processing.Components.Tasks;
import Acosoft.Processing.DataBox.Racun;
import Acosoft.Processing.DataBox.RacunNaplata;
import Acosoft.Processing.Pro3App;
import Acosoft.Processing.Pro3Postavke;
import Acosoft.Processing.Pro3View;
import java.beans.PropertyVetoException;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import org.jdesktop.observablecollections.ObservableListListener;

/**
 *
 * @author Aco
 */
public class PregledNeplacenihRacuna extends javax.swing.JInternalFrame {

    /** Creates new form PregledNeplacenihRacuna */

    private EntityManager manager;

    public PregledNeplacenihRacuna() 
    {
        manager = Pro3x.Persistence.createEntityManagerFactory().createEntityManager();
        
        List<Racun> popisNeplacenih = manager.createNamedQuery("Racun.SviNeplaceni").getResultList();
        if(popisNeplacenih == null) popisNeplacenih = new LinkedList<Racun>();

        setNeplaceniRacuni(ObservableCollections.observableList(popisNeplacenih));

        initComponents();
        
        datumPlacanja.setText(sdf.format(Calendar.getInstance().getTime()));

        ObservableList<Racun> racuni = (ObservableList<Racun>) getNeplaceniRacuni();
        racuni.addObservableListListener(new ObservableListListener() 
        {
            public void listElementsAdded(ObservableList list, int index, int length)
            {
                IzracunajDugovanje();
            }

            public void listElementsRemoved(ObservableList list, int index, List oldElements)
            {
                IzracunajDugovanje();
            }

            public void listElementReplaced(ObservableList list, int index, Object oldElement)
            {
                IzracunajDugovanje();
            }

            public void listElementPropertyChanged(ObservableList list, int index)
            {
                IzracunajDugovanje();
            }
        });

        IzracunajDugovanje();
    }
    
    public EntityManager getManager()
    {
        return manager;
    }

    protected List<Racun> neplaceniRacuni;

    public List<Racun> getNeplaceniRacuni()
    {
        return neplaceniRacuni;
    }

    public void setNeplaceniRacuni(List<Racun> neplaceniRacuni)
    {
        this.neplaceniRacuni = neplaceniRacuni;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mnuPromjenaDatuma = new javax.swing.JPopupMenu();
        mnuDanasnjiDatum = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        ukupnoDugovanje = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        datumPlacanja = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        gridScroll = new javax.swing.JScrollPane();
        gridRacuni = new javax.swing.JTable();

        mnuPromjenaDatuma.setName("mnuPromjenaDatuma"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getActionMap(PregledNeplacenihRacuna.class, this);
        mnuDanasnjiDatum.setAction(actionMap.get("PostaviTrenutniDatum")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(PregledNeplacenihRacuna.class);
        mnuDanasnjiDatum.setText(resourceMap.getString("mnuDanasnjiDatum.text")); // NOI18N
        mnuDanasnjiDatum.setName("mnuDanasnjiDatum"); // NOI18N
        mnuPromjenaDatuma.add(mnuDanasnjiDatum);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(resourceMap.getString("pregled-neplacenih-racuna-v2.title")); // NOI18N
        setName("pregled-neplacenih-racuna-v2"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                ZatvaranjeProzora(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 5, 1), javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.insideBorder.title")))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        ukupnoDugovanje.setFont(resourceMap.getFont("ukupnoDugovanje.font")); // NOI18N
        ukupnoDugovanje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ukupnoDugovanje.setText(resourceMap.getString("ukupnoDugovanje.text")); // NOI18N
        ukupnoDugovanje.setName("ukupnoDugovanje"); // NOI18N
        ukupnoDugovanje.setPreferredSize(new java.awt.Dimension(90, 90));
        jPanel1.add(ukupnoDugovanje, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1);

        datumPlacanja.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        datumPlacanja.setText(resourceMap.getString("datumPlacanja.text")); // NOI18N
        datumPlacanja.setComponentPopupMenu(mnuPromjenaDatuma);
        datumPlacanja.setMargin(new java.awt.Insets(2, 2, 2, 2));
        datumPlacanja.setMinimumSize(new java.awt.Dimension(14, 30));
        datumPlacanja.setName("datumPlacanja"); // NOI18N
        datumPlacanja.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel2.add(datumPlacanja);

        jButton2.setAction(actionMap.get("PotvrdiUplatu")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel2.add(jButton2);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setMinimumSize(new java.awt.Dimension(6, 30));
        jSeparator1.setName("jSeparator1"); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 30));
        jPanel2.add(jSeparator1);

        jButton1.setAction(actionMap.get("Zatvori")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel2.add(jButton1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        gridScroll.setName("gridScroll"); // NOI18N

        gridRacuni.setAutoCreateRowSorter(true);
        gridRacuni.setName("gridRacuni"); // NOI18N
        gridRacuni.setRowHeight(35);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${neplaceniRacuni}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, gridRacuni);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${izdan}"));
        columnBinding.setColumnName("Izdan");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valuta}"));
        columnBinding.setColumnName("Valuta");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${naziv}"));
        columnBinding.setColumnName("Naziv");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${adresa}"));
        columnBinding.setColumnName("Adresa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefon}"));
        columnBinding.setColumnName("Telefon");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mobitel}"));
        columnBinding.setColumnName("Mobitel");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ukupno}"));
        columnBinding.setColumnName("Ukupno");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        gridScroll.setViewportView(gridRacuni);
        gridRacuni.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title0")); // NOI18N
        gridRacuni.getColumnModel().getColumn(0).setCellRenderer(new DateCellRenderer("dd.MM.yyyy"));
        gridRacuni.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title1")); // NOI18N
        gridRacuni.getColumnModel().getColumn(1).setCellRenderer(new DateCellRenderer("dd.MM.yyyy"));
        gridRacuni.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title2")); // NOI18N
        gridRacuni.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title3")); // NOI18N
        gridRacuni.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title4")); // NOI18N
        gridRacuni.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title5")); // NOI18N
        gridRacuni.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("gridRacuni.columnModel.title6")); // NOI18N
        gridRacuni.getColumnModel().getColumn(6).setCellRenderer(new NumberCellRenderer());

        jPanel3.add(gridScroll, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ZatvaranjeProzora(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_ZatvaranjeProzora
    {//GEN-HEADEREND:event_ZatvaranjeProzora
        if(getManager().getTransaction().isActive())
            getManager().getTransaction().rollback();

        getManager().close();
    }//GEN-LAST:event_ZatvaranjeProzora

    public List<RacunNaplata> PraznaListaNaplata()
    {
        List<RacunNaplata> praznaLista = new LinkedList<RacunNaplata>();
        return praznaLista;
    }

    private Racun getOdabraniRacun() throws Exception
    {
        int view = gridRacuni.getSelectedRow();
        if(view >= 0)
        {
            int model = gridRacuni.convertRowIndexToModel(view);
            return getNeplaceniRacuni().get(model);
        }
        else throw new Exception("Izaberite račun za koji želite potvrditi plaćanje.");
    }

    @Action
    public void Zatvori()
    {
        try
        {
            setClosed(true);
        }
        catch (PropertyVetoException ex)
        {
            Logger.getLogger(PregledNeplacenihRacuna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void IzracunajDugovanje()
    {
        Double ukupno = 0D;

        for(Racun racun : getNeplaceniRacuni())
            ukupno += racun.getDugovanje();

        NumberFormat nf = NumberFormat.getInstance();
        nf.setMinimumFractionDigits(2);
        nf.setMaximumFractionDigits(2);

        try
        {
            ukupnoDugovanje.setText(nf.format(ukupno) + " " + Pro3Postavke.getInfo().getValuta());
        }
        catch (Exception ex)
        {
            Logger.getLogger(PregledNeplacenihRacuna.class.getName()).log(Level.SEVERE, null, ex);
            ukupnoDugovanje.setText(nf.format(ukupno) + " kn");
        }
    }


    @Action
    public void PotvrdiUplatu()
    {
        try
        {
            Racun racun = getOdabraniRacun();
            int result = JOptionPane.showConfirmDialog(this,
                    MessageFormat.format("Želite li potvrditi uplatu računa?\nRačun: {0}", racun.getOznaka()),
                    "Upozorenje", JOptionPane.YES_NO_OPTION);

            if(result == JOptionPane.YES_OPTION)
            {
                Date datum = getDatumPlacanja();
                getManager().getTransaction().begin();

                racun.setPlacen(datum);
                getManager().persist(racun);
                
                getManager().getTransaction().commit();

                getNeplaceniRacuni().remove(racun);

                IzracunajDugovanje();
            }
        }
        catch (Exception ex)
        {
            Logger.getLogger(PregledNeplacenihRacuna.class.getName()).log(Level.SEVERE, null, ex);
            Tasks.showMessage(ex.getMessage());
        }
    }

    private Date getDatumPlacanja() throws Exception
    {
        try
        {
            if(datumPlacanja.getText().isEmpty())
                return null;
            else
                return sdf.parse(datumPlacanja.getText());
        }
        catch (ParseException ex)
        {
            Logger.getLogger(PregledNeplacenihRacuna.class.getName()).log(Level.SEVERE, null, ex);
            throw new Exception("Neprihvatljivi format datuma. Provjerite upisani datum i pokušajte ponovno.");
        }
    }

    private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

    @Action
    public void DodajNovuRatu()
    {
        NovaNaplata novaNaplata = new NovaNaplata("Unos nove naplate", new NovaNaplata.SaveHandler()
        {
            public boolean Save(Date dospijece, Date placanje, Double iznos)
            {
                try
                {
                    getManager().getTransaction().begin();

                    RacunNaplata naplata = new RacunNaplata();

                    naplata.setDatumDospijeca(dospijece);
                    naplata.setDatumPlacanja(placanje);
                    naplata.setRacun(getOdabraniRacun());
                    naplata.setIznos(iznos);

                    getManager().persist(naplata);
                    getManager().getTransaction().commit();
                    return true;
                }
                catch (Exception ex)
                {
                    Logger.getLogger(PregledNeplacenihRacuna.class.getName()).log(Level.SEVERE, null, ex);
                    new ExceptionView(ex).setVisible(true);
                    return false;
                }
            }
        });

        Pro3View view = (Pro3View) Pro3App.getApplication().getMainView();
        view.Show(novaNaplata);
    }

    @Action
    public void PostaviTrenutniDatum()
    {
        datumPlacanja.setText(sdf.format(Calendar.getInstance().getTime()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField datumPlacanja;
    private javax.swing.JTable gridRacuni;
    private javax.swing.JScrollPane gridScroll;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem mnuDanasnjiDatum;
    private javax.swing.JPopupMenu mnuPromjenaDatuma;
    private javax.swing.JLabel ukupnoDugovanje;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
