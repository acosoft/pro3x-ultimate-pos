/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PopisOperatera.java
 *
 * Created on 21.12.2012., 22:05:29
 */
package Pro3x.Fiscal;

import Acosoft.Processing.Components.Tasks;
import Acosoft.Processing.Pro3App;
import Acosoft.Processing.Pro3View;
import Pro3x.BasicView;
import Pro3x.Fiscal.Model.Operater;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityTransaction;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author aco
 */
public class PopisOperatera extends BasicView {

    /** Creates new form PopisOperatera */
    public PopisOperatera() {
        initComponents();
    }
    
    private Operater operater;

    public Operater getOperater() {
        return operater;
    }

    public void setOperater(Operater operater) {
        this.operater = operater;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        manager = java.beans.Beans.isDesignTime() ? null : this.getProManager();
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(PopisOperatera.class);
        query = java.beans.Beans.isDesignTime() ? null : manager.createQuery(resourceMap.getString("query.query")); // NOI18N
        results = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(new java.util.LinkedList(query.getResultList()));
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(resourceMap.getString("popis-operatera.title")); // NOI18N
        setName("popis-operatera"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getActionMap(PopisOperatera.class, this);
        jButton5.setAction(actionMap.get("Osvjezi")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setMaximumSize(new java.awt.Dimension(90, 30));
        jButton5.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton5.setName("jButton5"); // NOI18N
        jButton5.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(jButton5);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setName("jSeparator2"); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(6, 30));
        jPanel1.add(jSeparator2);

        jButton2.setAction(actionMap.get("NoviOperater")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(90, 30));
        jButton2.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton2.setName("jButton2"); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(jButton2);

        jButton3.setAction(actionMap.get("Izmjeni")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setMaximumSize(new java.awt.Dimension(90, 30));
        jButton3.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton3.setName("jButton3"); // NOI18N
        jButton3.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(jButton3);

        jButton4.setAction(actionMap.get("Izbrisi")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setMaximumSize(new java.awt.Dimension(90, 30));
        jButton4.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton4.setName("jButton4"); // NOI18N
        jButton4.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(jButton4);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setName("jSeparator1"); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 30));
        jPanel1.add(jSeparator1);

        jButton1.setAction(actionMap.get("Zatvori")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(90, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(90, 30));
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 0, 5));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        grid.setName("grid"); // NOI18N
        grid.setRowHeight(35);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, results, grid, "id"); // NOI18N
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${oib}"));
        columnBinding.setColumnName("Oib");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${operater}"), grid, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"), "odabraniElement");
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(grid);
        grid.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("grid.columnModel.title0")); // NOI18N
        grid.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("grid.columnModel.title1")); // NOI18N

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24));
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 10, 5, 0));
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void Zatvori() {
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(PopisOperatera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Action
    public void NoviOperater() {
        IzmjenaOperatera x = new IzmjenaOperatera(manager);
        
        x.addPropertyChangeListener("operater", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                Osvjezi();
            }
        });

        Pro3View view = (Pro3View) Pro3App.getApplication().getMainView();
        view.Show(x);
    }
    
    @Action
    public void Izmjeni() {
        if(getOperater() != null)
        {
            IzmjenaOperatera x = new IzmjenaOperatera(getOperater(), manager);
            
            x.addPropertyChangeListener("operater", new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    Osvjezi();
                }
            });

            Pro3View view = (Pro3View) Pro3App.getApplication().getMainView();
            view.Show(x);
        }
        else
        {
            Tasks.showMessage("Izaberite operatera i zatim kliknite na gumb Izmjeni");
        }
    }

    @Action
    public void Osvjezi() {
        results.clear();
        results.addAll(query.getResultList());
    }

    @Action
    public void Izbrisi() {
        if(getOperater() != null)
        {
            if(JOptionPane.showConfirmDialog(this, "Jeste li sigurni da Å¾elite izbrisati odabraog operatera?", "Upozorenje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            {
                EntityTransaction transaction = manager.getTransaction();
                transaction.begin();
                manager.remove(getOperater());
                transaction.commit();

                Osvjezi();

                Tasks.showMessage("Operater je izbrisan");
            }
        }
        else
        {
            Tasks.showMessage("Izaberite operatera i zatim kliknite na gumb IzbriÅ¡i");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable grid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.persistence.EntityManager manager;
    private javax.persistence.Query query;
    private java.util.List<Operater> results;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
