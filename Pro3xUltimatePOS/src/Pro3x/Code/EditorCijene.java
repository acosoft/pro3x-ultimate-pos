/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditorCijene.java
 *
 * Created on 2010.03.18, 23:28:17
 */

package Pro3x.Code;

import java.awt.Component;
import java.text.NumberFormat;
import java.util.EventObject;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Aco
 */
public class EditorCijene extends javax.swing.JPanel implements TableCellEditor
{
    private EditorCijenePopup popEditor;
    private JTable table;
    private NumberFormat nf;

    /** Creates new form EditorCijene */
    public EditorCijene()
    {
        nf = NumberFormat.getInstance();
        nf.setMinimumFractionDigits(2);
        nf.setMaximumFractionDigits(2);
        nf.setGroupingUsed(false);

        initComponents();

        popEditor = new EditorCijenePopup(this);
        pop.add(popEditor);
    }

    public NumberFormat getFormat()
    {
        return nf;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new javax.swing.JPopupMenu();
        prikazCijene = new javax.swing.JTextField();

        pop.setName("pop"); // NOI18N

        setName("Form"); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ProsljediFokus(evt);
            }
        });

        prikazCijene.setEditable(false);
        prikazCijene.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(EditorCijene.class);
        prikazCijene.setText(resourceMap.getString("prikazCijene.text")); // NOI18N
        prikazCijene.setComponentPopupMenu(pop);
        prikazCijene.setName("prikazCijene"); // NOI18N
        prikazCijene.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrikaziEditor(evt);
            }
        });
        prikazCijene.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PrikaziEditorNaFocus(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(prikazCijene, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(prikazCijene, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void PrikaziEditor(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PrikaziEditor
    {//GEN-HEADEREND:event_PrikaziEditor
        PrikaziEditor();
    }//GEN-LAST:event_PrikaziEditor

    private void PrikaziEditorNaFocus(java.awt.event.FocusEvent evt)//GEN-FIRST:event_PrikaziEditorNaFocus
    {//GEN-HEADEREND:event_PrikaziEditorNaFocus
        PrikaziEditor();
    }//GEN-LAST:event_PrikaziEditorNaFocus

    private void ProsljediFokus(java.awt.event.FocusEvent evt)//GEN-FIRST:event_ProsljediFokus
    {//GEN-HEADEREND:event_ProsljediFokus
        prikazCijene.requestFocusInWindow();
    }//GEN-LAST:event_ProsljediFokus

    private void PrikaziEditor()
    {
        try
        {
            if (isVisible())
            {
                popEditor.PromjeniCijenu(getCijena());
                prikazCijene.getComponentPopupMenu().show(this, 0, getHeight());

                SwingUtilities.invokeLater(new Runnable() {

                    public void run()
                    {
                        popEditor.requestFocusInWindow();
                    }
                });
            }
        }
        catch (Exception e)
        {
            //TODO: greska pri zatvaranju klikom izvan editora, trebalo bi to malo srediti
        }
    }

    @Override
    public void setVisible(boolean aFlag)
    {
        super.setVisible(aFlag);
        prikazCijene.requestFocusInWindow();
    }

    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column)
    {
        this.table = table;

        if(value instanceof Double)
        {
            setCijena((Double)value);
            prikazCijene.setText(nf.format(value));
        }
        else
            prikazCijene.setText("Gre≈°ka!");

        return this;
    }

    public Object getCellEditorValue()
    {
        return getCijena();
    }

    protected double cijena;

    public double getCijena()
    {
        return cijena;
    }

    public void setCijena(double cijena)
    {
        this.cijena = cijena;
    }

    public boolean isCellEditable(EventObject anEvent)
    {
        return true;
    }

    public boolean shouldSelectCell(EventObject anEvent)
    {
        return true;
    }

    public boolean stopCellEditing()
    {
        List<CellEditorListener> temp = listeners.subList(0, listeners.size());
        for(CellEditorListener listener : temp)
            listener.editingStopped(new ChangeEvent(this));

        return true;
    }

    public void cancelCellEditing()
    {
        List<CellEditorListener> temp = listeners.subList(0, listeners.size());
        for(CellEditorListener listener : temp)
            listener.editingCanceled(new ChangeEvent(this));
    }

    private List<CellEditorListener> listeners = new LinkedList<CellEditorListener>();

    public void addCellEditorListener(CellEditorListener l)
    {
        listeners.add(l);
    }

    public void removeCellEditorListener(CellEditorListener l)
    {
        listeners.remove(l);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu pop;
    private javax.swing.JTextField prikazCijene;
    // End of variables declaration//GEN-END:variables
}
