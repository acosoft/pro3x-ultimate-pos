// Pro3x Community project
// Copyright (C) 2009  Aleksandar Zgonjan
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, http://www.gnu.org/licenses/gpl.html

package Acosoft.Processing;

import Acosoft.Processing.Components.InfoRacun;
import java.awt.image.BufferedImage;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import org.jdesktop.application.LocalStorage;
import org.jdesktop.application.Task;

/**
 *
 * @author  nonstop
 */
public class Pro3Postavke extends javax.swing.JInternalFrame {
    public static final String PRO3X_PROMO_LOKACIJA = "pro3x-promo.xml";
    
    /** Creates new form Pro3Postavke */
    
    private String imagePath;
    private BufferedImage image = null;
    
    public Pro3Postavke() 
    {
        try 
        {
            initComponents();

            //adresaPortala.setSelected(info.isUkljucenaPro3xAdresa());

            LocalStorage store = Pro3App.getApplication().getContext().getLocalStorage();
            File lf = new File(store.getDirectory(), "logo.png");

            if (lf.exists()) 
            {
                logo.setIcon(null);
                imagePath = lf.getCanonicalPath();
                BufferedImage temp = ImageIO.read(lf.toURI().toURL());
                logo.setIcon(new ImageIcon(getScaledLogo(temp)));
            }

            promoBox.setSelected(getPro3xPromo().booleanValue());
        } 
        catch (Exception ex)
        {
            Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        info = new Acosoft.Processing.Components.InfoRacun();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        promoBox = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        spremi = new javax.swing.JButton();
        zatvori = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        xZaglavlje = new javax.swing.JTextArea();
        labDodatneInformacije1 = new javax.swing.JLabel();
        labNazivTvrtke = new javax.swing.JLabel();
        labDodatneInformacije2 = new javax.swing.JLabel();
        xNazivTvrtke = new javax.swing.JTextField();
        labZaglavlje = new javax.swing.JLabel();
        labZiro = new javax.swing.JLabel();
        xZiro = new javax.swing.JTextField();
        xMjesto = new javax.swing.JTextField();
        xValuta = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        promjeni = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        try { info = Pro3Postavke.getInfo(); } catch(Exception ex) { }

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(Pro3Postavke.class);
        setTitle(resourceMap.getString("postavke-ispisa-v3.title")); // NOI18N
        setName("postavke-ispisa-v3"); // NOI18N

        jPanel4.setMinimumSize(new java.awt.Dimension(500, 424));
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(500, 380));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 0));
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.BorderLayout());

        promoBox.setSelected(true);
        promoBox.setText(resourceMap.getString("promoBox.text")); // NOI18N
        promoBox.setName(null);
        jPanel6.add(promoBox, java.awt.BorderLayout.LINE_START);

        jPanel5.setName("jPanel5"); // NOI18N
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        spremi.setText(resourceMap.getString("spremi.text")); // NOI18N
        spremi.setMaximumSize(new java.awt.Dimension(90, 30));
        spremi.setMinimumSize(new java.awt.Dimension(90, 30));
        spremi.setName("spremi"); // NOI18N
        spremi.setPreferredSize(new java.awt.Dimension(90, 30));
        spremi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spremiActionPerformed(evt);
            }
        });
        jPanel5.add(spremi);

        zatvori.setText(resourceMap.getString("zatvori.text")); // NOI18N
        zatvori.setMaximumSize(new java.awt.Dimension(90, 30));
        zatvori.setMinimumSize(new java.awt.Dimension(90, 30));
        zatvori.setName("zatvori"); // NOI18N
        zatvori.setPreferredSize(new java.awt.Dimension(90, 30));
        zatvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zatvoriActionPerformed(evt);
            }
        });
        jPanel5.add(zatvori);

        jPanel6.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel4.add(jPanel6, java.awt.BorderLayout.PAGE_END);

        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 0, 2));
        jPanel8.setName("jPanel8"); // NOI18N
        jPanel8.setPreferredSize(new java.awt.Dimension(750, 350));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o tvrtki"));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 380));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 6, 5));
        jPanel7.setName("jPanel7"); // NOI18N
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N
        jScrollPane1.setPreferredSize(new java.awt.Dimension(266, 80));

        xZaglavlje.setColumns(20);
        xZaglavlje.setRows(5);
        xZaglavlje.setMargin(new java.awt.Insets(2, 2, 2, 2));
        xZaglavlje.setName("xZaglavlje"); // NOI18N
        xZaglavlje.setPreferredSize(new java.awt.Dimension(264, 80));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${zaglavlje}"), xZaglavlje, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(xZaglavlje);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane1, gridBagConstraints);

        labDodatneInformacije1.setText(resourceMap.getString("labDodatneInformacije1.text")); // NOI18N
        labDodatneInformacije1.setName("labDodatneInformacije1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 2, 0);
        jPanel7.add(labDodatneInformacije1, gridBagConstraints);

        labNazivTvrtke.setText(resourceMap.getString("labNazivTvrtke.text")); // NOI18N
        labNazivTvrtke.setName("labNazivTvrtke"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 2, 0);
        jPanel7.add(labNazivTvrtke, gridBagConstraints);

        labDodatneInformacije2.setText(resourceMap.getString("labDodatneInformacije2.text")); // NOI18N
        labDodatneInformacije2.setName("labDodatneInformacije2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 8, 2, 0);
        jPanel7.add(labDodatneInformacije2, gridBagConstraints);

        xNazivTvrtke.setMargin(new java.awt.Insets(2, 2, 2, 2));
        xNazivTvrtke.setName("xNazivTvrtke"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${nazivTvrtke}"), xNazivTvrtke, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel7.add(xNazivTvrtke, gridBagConstraints);

        labZaglavlje.setText(resourceMap.getString("labZaglavlje.text")); // NOI18N
        labZaglavlje.setName("labZaglavlje"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 2, 0);
        jPanel7.add(labZaglavlje, gridBagConstraints);

        labZiro.setText(resourceMap.getString("labZiro.text")); // NOI18N
        labZiro.setName("labZiro"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 2, 0);
        jPanel7.add(labZiro, gridBagConstraints);

        xZiro.setMargin(new java.awt.Insets(2, 2, 2, 2));
        xZiro.setName("xZiro"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${ziroRacun}"), xZiro, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(xZiro, gridBagConstraints);

        xMjesto.setMargin(new java.awt.Insets(2, 2, 2, 2));
        xMjesto.setName("xMjesto"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${mjestoIzdavanja}"), xMjesto, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel7.add(xMjesto, gridBagConstraints);

        xValuta.setMargin(new java.awt.Insets(2, 2, 2, 2));
        xValuta.setName("xValuta"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${valuta}"), xValuta, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(xValuta, gridBagConstraints);

        jPanel2.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("logo.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(275, 350));

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(resourceMap.getIcon("logo.icon")); // NOI18N
        logo.setText(resourceMap.getString("logo.text")); // NOI18N
        logo.setAlignmentX(0.5F);
        logo.setMaximumSize(null);
        logo.setMinimumSize(null);
        logo.setName("logo"); // NOI18N
        logo.setPreferredSize(null);
        logo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        promjeni.setText(resourceMap.getString("promjeni.text")); // NOI18N
        promjeni.setName("promjeni"); // NOI18N
        promjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promjeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(promjeni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addComponent(logo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(promjeni)
                .addContainerGap())
        );

        jPanel8.add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel4.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 0, 2), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.insideBorder.outsideBorder.title")), javax.swing.BorderFactory.createEmptyBorder(10, 5, 6, 5)))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(500, 142));
        jPanel3.setLayout(new java.awt.BorderLayout(5, 5));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, info, org.jdesktop.beansbinding.ELProperty.create("${informacije}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static Boolean getPro3xPromocija()
    {
        return true;
    }
    
    private void promjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promjeniActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                return f.getName().endsWith(".jpg") 
                        || f.getName().endsWith(".png") 
                        || f.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Slike, .jpg ili .png formata";
            }
        });
        
        int result = jf.showDialog(this, "Open");
        
        if(result == JFileChooser.APPROVE_OPTION)
        {
            try {
                imagePath = jf.getSelectedFile().getCanonicalPath();
                image = ImageIO.read(jf.getSelectedFile());
                logo.setIcon(new ImageIcon(getScaledLogo(image)));
            } catch (IOException ex) {
                Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_promjeniActionPerformed

    private java.awt.Image getScaledLogo(BufferedImage logo)
    {
        int width = logo.getWidth();
        int height = logo.getHeight();
        float scale;

        if(width > height)
            scale = (float)128 / width;
        else
            scale = (float)128 / height;

        width = Math.round(width * scale);
        height = Math.round(height * scale);

        return logo.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);
    }

    private void spremiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spremiActionPerformed
        Pro3App app = Pro3App.getApplication();
        app.getContext().getTaskService().execute(new Task(app)
        {
            @Override
            protected Object doInBackground() throws Exception
            {
                try 
                {
                    setMessage("Spremam postavke ispisa.");
                    Thread.sleep(1000);
                    LocalStorage store = Pro3App.getApplication().getContext().getLocalStorage();
                    if(image != null)
                    {
                        ImageIO.write(image, "png", new File(store.getDirectory(), "logo.png"));
                        setMessage("Spremam logo za ispis.");
                        Thread.sleep(1000);
                    }

                    setMessage("Spremam ostale postavke ispisa.");
                    store.save(info, "zaglavlje.xml");
                    
                    store.save(new Boolean(promoBox.isSelected()), PRO3X_PROMO_LOKACIJA);

                    Thread.sleep(1000);

                    setMessage("Postavke ispisa su uspješno spremljene");
                }
                catch (IOException ex)
                {
                    Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
                    setMessage("Iznimka pri spremanju postavki ispisa: " + ex.getMessage());
                }
                return null;
            }
        });
    }//GEN-LAST:event_spremiActionPerformed

    private void zatvoriActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_zatvoriActionPerformed
    {//GEN-HEADEREND:event_zatvoriActionPerformed
        try
        {
            setClosed(true);
        }
        catch (PropertyVetoException ex)
        {
            Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_zatvoriActionPerformed
    
    public static synchronized BufferedImage getLogo() throws IOException
    {
        try
        {
            LocalStorage store = Pro3App.getApplication().getContext().getLocalStorage();
            File file = new File(store.getDirectory(), "logo.png");

            if (file.exists()) {
                return ImageIO.read(file);
            } else {
                return ImageIO.read(Pro3Postavke.class.getResource("resources/logo.png"));
            }
        } catch (IOException ex) {
            Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
            throw ex;
        }
    }

    public static synchronized InputStream getLogoStream() throws Exception
    {
        Pro3App app = Pro3App.getApplication();
        LocalStorage store = app.getContext().getLocalStorage();
        File logo = new File(store.getDirectory(), "logo.png");

        if(logo.exists())
            return new FileInputStream(logo.getCanonicalPath());
        else
            throw new FileNotFoundException();
    }
    
    public static String getValuta()
    {
        try {
            return getInfo().getValuta();
        } catch (Exception ex) {
            Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
            return "kn";
        }
    }

    public static synchronized InfoRacun getInfo() throws Exception
    {
        LocalStorage store = Pro3App.getApplication().getContext().getLocalStorage();

        InfoRacun fromStore = (InfoRacun)store.load("zaglavlje.xml");
        if(fromStore != null)
            return fromStore;
        else
            throw new Exception();

//        if(file.exists())
//
//        else
//            throw new Exception("Postavke ispisa nisu definirane.");
    }

    public static synchronized Boolean getPro3xPromo()
    {
        LocalStorage store = Pro3App.getApplication().getContext().getLocalStorage();

        try
        {
            Boolean promo = (Boolean) store.load(PRO3X_PROMO_LOKACIJA);
            
            if(promo == null)
                return true;
            else
                return promo;

        } catch (IOException ex)
        {
            Logger.getLogger(Pro3Postavke.class.getName()).log(Level.SEVERE, null, ex);
            return true;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Acosoft.Processing.Components.InfoRacun info;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labDodatneInformacije1;
    private javax.swing.JLabel labDodatneInformacije2;
    private javax.swing.JLabel labNazivTvrtke;
    private javax.swing.JLabel labZaglavlje;
    private javax.swing.JLabel labZiro;
    private javax.swing.JLabel logo;
    private javax.swing.JButton promjeni;
    private javax.swing.JCheckBox promoBox;
    private javax.swing.JButton spremi;
    private javax.swing.JTextField xMjesto;
    private javax.swing.JTextField xNazivTvrtke;
    private javax.swing.JTextField xValuta;
    private javax.swing.JTextArea xZaglavlje;
    private javax.swing.JTextField xZiro;
    private javax.swing.JButton zatvori;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
