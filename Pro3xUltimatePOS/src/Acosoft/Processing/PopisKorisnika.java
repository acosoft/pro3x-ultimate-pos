// Pro3x Community project
// Copyright (C) 2009  Aleksandar Zgonjan
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, http://www.gnu.org/licenses/gpl.html

package Acosoft.Processing;

import Acosoft.Processing.Components.Tasks;
import Acosoft.Processing.DataBox.Korisnik;
import Pro3x.Live.EventArgs;
import Pro3x.Live.EventListener;
import Pro3x.Live.KorisnikEvents;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityTransaction;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;



/**
 *
 * @author nonstop
 */
//TODO: Promjeni osnovnu klasu i koristi getProManager()
public class PopisKorisnika extends Pro3x.BasicView {

    private EventListener listener = new EventListener()
    {
        public void doWork(Object source, EventArgs eventArgs)
        {
            KorisnikEvents.KorisnikEventArgs args = (KorisnikEvents.KorisnikEventArgs)eventArgs;

            switch(args.getType())
            {
                case Izbrisan:
                    korisnikList.remove(args.getStariKorisnik());
                break;

                case Izmjenjen:
                    int index = korisnikList.indexOf(args.getStariKorisnik());
                    if(index >= 0) korisnikList.set(index, args.getNoviKorisnik());
                break;

                case Kreiran:
                    korisnikList.add(args.getNoviKorisnik());
                break;
            }
        }
    };

    @Action
    public void NoviKupac()
    {
        Pro3View main = (Pro3View) Pro3App.getApplication().getMainView();
        main.AkcijaNoviKorisnik();
    }
    
    @Action
    public void Zatvori()
    {
        try {
            setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(PopisKorisnika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /** Creates new form PopisKorisnika */
    public PopisKorisnika() {
        initComponents();

        KorisnikEvents.Events().addListener(listener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        proManager = getProManager();
        korisnikQuery = java.beans.Beans.isDesignTime() ? null : proManager.createQuery("SELECT k FROM Korisnik k");
        korisnikList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(new java.util.LinkedList(korisnikQuery.getResultList()));
        jPanel2 = new javax.swing.JPanel();
        gridScroll = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cmdDodaj = new javax.swing.JButton();
        cmdIzmjeni = new javax.swing.JButton();
        cmdIzbrisi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cmdZatvori = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getResourceMap(PopisKorisnika.class);
        setTitle(resourceMap.getString("popis-korisnika.title")); // NOI18N
        setName("popis-korisnika"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                CleanUp(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 0, 5));
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        gridScroll.setName(""); // NOI18N

        grid.setAutoCreateRowSorter(true);
        grid.setName("grid"); // NOI18N
        grid.setRowHeight(35);
        grid.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        grid.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, korisnikList, grid);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${naziv}"));
        columnBinding.setColumnName("Naziv");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${maticniBroj}"));
        columnBinding.setColumnName("Maticni Broj");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${adresa}"));
        columnBinding.setColumnName("Adresa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lokacija}"));
        columnBinding.setColumnName("Lokacija");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mobitel}"));
        columnBinding.setColumnName("Mobitel");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefon}"));
        columnBinding.setColumnName("Telefon");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        gridScroll.setViewportView(grid);
        grid.getColumnModel().getColumn(0).setPreferredWidth(100);
        grid.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("grid.columnModel.title0")); // NOI18N
        grid.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("grid.columnModel.title6")); // NOI18N
        grid.getColumnModel().getColumn(2).setPreferredWidth(100);
        grid.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("grid.columnModel.title1")); // NOI18N
        grid.getColumnModel().getColumn(3).setPreferredWidth(100);
        grid.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("grid.columnModel.title2")); // NOI18N
        grid.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("grid.columnModel.title3")); // NOI18N
        grid.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("grid.columnModel.title4")); // NOI18N
        grid.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("grid.columnModel.title5")); // NOI18N

        jPanel2.add(gridScroll, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(Acosoft.Processing.Pro3App.class).getContext().getActionMap(PopisKorisnika.class, this);
        cmdDodaj.setAction(actionMap.get("NoviKupac")); // NOI18N
        cmdDodaj.setText(resourceMap.getString("cmdDodaj.text")); // NOI18N
        cmdDodaj.setMaximumSize(new java.awt.Dimension(90, 30));
        cmdDodaj.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdDodaj.setName("cmdDodaj"); // NOI18N
        cmdDodaj.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(cmdDodaj);

        cmdIzmjeni.setMnemonic('I');
        cmdIzmjeni.setText(resourceMap.getString("cmdIzmjeni.text")); // NOI18N
        cmdIzmjeni.setMaximumSize(new java.awt.Dimension(90, 30));
        cmdIzmjeni.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdIzmjeni.setName("cmdIzmjeni"); // NOI18N
        cmdIzmjeni.setPreferredSize(new java.awt.Dimension(90, 30));
        cmdIzmjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtvoriIzmjenuKorisnika(evt);
            }
        });
        jPanel1.add(cmdIzmjeni);

        cmdIzbrisi.setMnemonic('D');
        cmdIzbrisi.setText(resourceMap.getString("cmdIzbrisi.text")); // NOI18N
        cmdIzbrisi.setMaximumSize(new java.awt.Dimension(90, 30));
        cmdIzbrisi.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdIzbrisi.setName("cmdIzbrisi"); // NOI18N
        cmdIzbrisi.setPreferredSize(new java.awt.Dimension(90, 30));
        cmdIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IzbrisiOdabraneRedove(evt);
            }
        });
        jPanel1.add(cmdIzbrisi);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setName("jSeparator1"); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(4, 30));
        jPanel1.add(jSeparator1);

        cmdZatvori.setAction(actionMap.get("Zatvori")); // NOI18N
        cmdZatvori.setText(resourceMap.getString("cmdZatvori.text")); // NOI18N
        cmdZatvori.setMargin(new java.awt.Insets(20, 0, 20, 0));
        cmdZatvori.setMaximumSize(new java.awt.Dimension(90, 30));
        cmdZatvori.setMinimumSize(new java.awt.Dimension(90, 30));
        cmdZatvori.setName("cmdZatvori"); // NOI18N
        cmdZatvori.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel1.add(cmdZatvori);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24));
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 10, 5, 10));
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IzbrisiOdabraneRedove(java.awt.event.ActionEvent evt)//GEN-FIRST:event_IzbrisiOdabraneRedove
    {//GEN-HEADEREND:event_IzbrisiOdabraneRedove
        
        if(grid.getSelectedRow() >= 0)
        {
            int rezultat = JOptionPane.showConfirmDialog(this.getTopLevelAncestor(),
                "Želite li izbrisati odabrani redak?",
                "Potvrda brisanja", JOptionPane.YES_NO_OPTION);

            if(rezultat == JOptionPane.YES_OPTION)
            {
                int line = grid.getSelectedRow();
                line = grid.getRowSorter().convertRowIndexToModel(line);
                EntityTransaction et = proManager.getTransaction();
                et.begin();

                Korisnik korisnik = korisnikList.get(line);
                korisnik = proManager.getReference(Korisnik.class, korisnik.getKljuc());
                proManager.refresh(korisnik);
                proManager.remove(korisnik);
                korisnikList.remove(line);

                et.commit();

                KorisnikEvents.fireIzbrisanKorisnik(this, korisnik);
            }
        }
        else
        {
            Tasks.showMessage("Izaberite redak koji želite izbrisati");
        }
        
    }//GEN-LAST:event_IzbrisiOdabraneRedove

    private void OtvoriIzmjenuKorisnika(java.awt.event.ActionEvent evt)//GEN-FIRST:event_OtvoriIzmjenuKorisnika
    {//GEN-HEADEREND:event_OtvoriIzmjenuKorisnika
        NoviKorisnik x = new NoviKorisnik();
        int line = grid.getSelectedRow();

        if(line > -1)
        {
            line = grid.getRowSorter().convertRowIndexToModel(line);
            x.IzmjeniKorisnika(this, korisnikList.get(line));
            this.getDesktopPane().add(x);
            x.show();
        }
        else
        {
            Tasks.showMessage("Izaberite redak koji želite izmjeniti");
        }
    }//GEN-LAST:event_OtvoriIzmjenuKorisnika

    private void CleanUp(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_CleanUp
    {//GEN-HEADEREND:event_CleanUp
        KorisnikEvents.Events().removeListener(listener);
    }//GEN-LAST:event_CleanUp


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdDodaj;
    private javax.swing.JButton cmdIzbrisi;
    private javax.swing.JButton cmdIzmjeni;
    private javax.swing.JButton cmdZatvori;
    private javax.swing.JTable grid;
    private javax.swing.JScrollPane gridScroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private java.util.List<Acosoft.Processing.DataBox.Korisnik> korisnikList;
    private javax.persistence.Query korisnikQuery;
    private javax.persistence.EntityManager proManager;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
